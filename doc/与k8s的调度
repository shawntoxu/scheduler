构建image  
当前目录下包含Dockerfile,使用命令build来创建新的image, 
并命名为  ali.repo.ndp.com:5000/paas/ubuntu14-shawn

docker build  -t ali.repo.ndp.com:5000/paas/ubuntu14-shawn  ./

整体流程
1 调度系统定时调度 master主机上的shell 
2 shell 探测是否有新的image版本产生，有的话就更新pod的josn模板文件
3 创建pod，并发送业务cmd到此pod


阿里云k8s环境
10.7.0.1 /Letmein12354
10.7.0.4 可push images上去

容器Letmein123

json路径
/root/paas/github/tmp/paas-deployment/kube-clusters/yeahmobi


可用的image
docker pull
xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff:test1.0

下载到本地

Dockerfile 及构建image脚步 路径
/root/paas/github/tmp/paas-deployment/dfiles/yeahmobi/ym-web-affiliate

pod创建
 kubectl create -f ./pod.json

 也可以用yaml   --validate 表示验证下文件的配置语法
 kubectl create -f ./hello-world.yaml --validate

 使用下载的mysql镜像，这里先不写command[],args[],port[]等属性  shawn-test.json 内容如下:
 {
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "mysql-shawn-test",
    "namespace": "default"
  },
  "spec":{
          "containers":[
          {
            "name":"mysql",
            "image":"xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff:test1.0"
          }
        ]
    }
}

创建这个pod
	
创建成功后，查看生成的pod信息，里面含有目前这个容器分配在了那个节点上
及随机分配的私有ip，可登陆上去安装需要的软件
kubectl describe po shawn-test 

kubectl describe po shawn-test   | grep IP 

比如过滤到了10.10.44.72 这个ip地址，且这个镜像ssh本身有装，root可以登录
那么直接登陆
ssh 10.10.44.72    password:Letmein123
也可以像docker 命令一样去直接开个tty 
kubectl exec shawn-test  -it /bin/bash

登陆后我在 /root 下写了个脚本测试
/root/shawn_test.sh

内容:
#!/bin/bash
echo "`date`----test $1" >> /root/shawn-test.txt


登陆到容器分配的节点上,查看创建的容器id，用容器的iamge 名称过滤
docker ps | grep xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff:test1.0 
比如查询到创建的容器id = d3583e662742
提交更改到这个镜像
docker commit d3583e662742  xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff:test1.0

提交成功后 运行docker images ,查看到这个images ，CREATED那一栏的时间就是最近的


接下来在k8s master节点删除这个pod
kubectl delete pod shawn-test

在刚才容器分配的节点上push images 到仓库
docker push xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff:test1.0 

然后删除本地的images
docker rmi xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff




 {
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "mysql-shawn-test",
    "namespace": "default"
  },
  "spec":{
          "containers":[
          {
            "name":"mysql",
            "image":"xa.repo.ndp.com:5000/yeahmobi_snapshots/ym-web-aff:test1.0",
			"command": [
               "/bin/bash",
               "-c",
               "/root/shawn_test.sh"
              ],
              "args": [
                "testBYshawn"
              ],
              resources{

              }

          }
        ]
    }
}

"ports": [
				{   
				  "hostPort": 6001,
				  "containerPort":22, 
				  "protocol": "TCP"
				}
      ]


